<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- 웹 어플리케이션 전체에 대한 설정은 이 파일에  한다. -->
	<!--  DB연결 정보를 등록한다. -->
	<!-- 1. 프로퍼티 파일을 사용 하겠다. -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	<!-- 2. DataSource빈을 등록한다. -->
	<bean id ="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${o.driver}"></property>
		<property name="url" value="${o.url}"></property>
		<property name="username" value="${o.username}"></property>
		<property name="password" value="${o.password}"></property>
	</bean>
	<!-- 3. JdbcTemplate 빈을 등록 해야한다. 생성자로 주입 되고 Setter로 주입해도 된다. -->
	<bean id = "jdbcTemplate" class ="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>	
	</bean>
	
	<!-- 4. Mybatis 빈 등록 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="typeAliasesPackage" value="kr.human.mvc06.vo"></property>
		<property name="mapperLocations" value="classpath:/kr/human/mvc06/dao/*.xml"></property>
	</bean>
	<!-- 5. 다음의 빈을 등록 해야 DAOImpl을 만들지 않아도 된다. -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="kr.human.mvc06.dao"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
		
</beans>

