<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<!-- 컨트롤러를 거치지 않고 직접 접근이 가능한 정적 데이터의 위치를 지정한다. -->
	<!-- HTML, CSS, JavaScript, image, 동영상 ...... -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- webjars를 이용하겠다. -->
	<resources mapping="/webjars/**" location="/webjars/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan
		base-package="kr.human.mvc07" />

	<!-- JPA 설정을 servlet-context.xml에 해라!!! -->
	<jpa:repositories base-package="kr.human.mvc07.dao"></jpa:repositories>
	<beans:bean
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		id="entityManagerFactory">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
		<beans:property name="packagesToScan" value="kr.human.mvc07.vo"></beans:property>
		<beans:property name="jpaVendorAdapter">
			<beans:bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
			    <beans:property name="databasePlatform" value="org.hibernate.dialect.Oracle10gDialect"/>
	            <beans:property name="showSql" value="true" />
			</beans:bean>
		</beans:property>
	</beans:bean>

	<beans:bean class="org.springframework.orm.jpa.JpaTransactionManager"
		id="transactionManager">
		<beans:property name="entityManagerFactory"
			ref="entityManagerFactory"></beans:property>
	</beans:bean>
</beans:beans>
